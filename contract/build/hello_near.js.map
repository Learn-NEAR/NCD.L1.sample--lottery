{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../node_modules/near-sdk-js/lib/promise.js","../src/fee-strategies.ts","../src/utils.ts","../src/lottery.ts","../src/contract.ts"],"sourcesContent":["export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    log('valueReturn');\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        throw Error(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    log('promiseReturn');\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.length) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction serializeIndex(index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    return u8ArrayToBytes(array);\n}\nfunction deserializeIndex(rawIndex) {\n    let array = bytesToU8Array(rawIndex);\n    let data = new Uint32Array(array.buffer);\n    return data[0];\n}\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    get length() {\n        return this.elements.length;\n    }\n    // noop, called by deserialize\n    set length(_l) { }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.length;\n            let nextIndexRaw = serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.length == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.length - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import * as near from \"./api\";\nexport class PromiseAction {\n}\nexport class CreateAccount extends PromiseAction {\n    add(promise_index) {\n        near.promiseBatchActionCreateAccount(promise_index);\n    }\n}\nexport class DeployContract extends PromiseAction {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeployContract(promise_index, this.code);\n    }\n}\nexport class FunctionCall extends PromiseAction {\n    constructor(function_name, args, amount, gas) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCall(promise_index, this.function_name, this.args, this.amount, this.gas);\n    }\n}\nexport class FunctionCallWeight extends PromiseAction {\n    constructor(function_name, args, amount, gas, weight) {\n        super();\n        this.function_name = function_name;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promise_index) {\n        near.promiseBatchActionFunctionCallWeight(promise_index, this.function_name, this.args, this.amount, this.gas, this.weight);\n    }\n}\nexport class Transfer extends PromiseAction {\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promise_index) {\n        near.promiseBatchActionTransfer(promise_index, this.amount);\n    }\n}\nexport class Stake extends PromiseAction {\n    constructor(amount, public_key) {\n        super();\n        this.amount = amount;\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionStake(promise_index, this.amount, this.public_key.data);\n    }\n}\nexport class AddFullAccessKey extends PromiseAction {\n    constructor(public_key, nonce) {\n        super();\n        this.public_key = public_key;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFullAccess(promise_index, this.public_key.data, this.nonce);\n    }\n}\nexport class AddAccessKey extends PromiseAction {\n    constructor(public_key, allowance, receiver_id, function_names, nonce) {\n        super();\n        this.public_key = public_key;\n        this.allowance = allowance;\n        this.receiver_id = receiver_id;\n        this.function_names = function_names;\n        this.nonce = nonce;\n    }\n    add(promise_index) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promise_index, this.public_key.data, this.nonce, this.allowance, this.receiver_id, this.function_names);\n    }\n}\nexport class DeleteKey extends PromiseAction {\n    constructor(public_key) {\n        super();\n        this.public_key = public_key;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteKey(promise_index, this.public_key.data);\n    }\n}\nexport class DeleteAccount extends PromiseAction {\n    constructor(beneficiary_id) {\n        super();\n        this.beneficiary_id = beneficiary_id;\n    }\n    add(promise_index) {\n        near.promiseBatchActionDeleteAccount(promise_index, this.beneficiary_id);\n    }\n}\nclass PromiseSingle {\n    constructor(account_id, actions, after, promise_index) {\n        this.account_id = account_id;\n        this.actions = actions;\n        this.after = after;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let promise_index;\n        if (this.after) {\n            promise_index = near.promiseBatchThen(this.after.constructRecursively(), this.account_id);\n        }\n        else {\n            promise_index = near.promiseBatchCreate(this.account_id);\n        }\n        for (let action of this.actions) {\n            action.add(promise_index);\n        }\n        this.promise_index = promise_index;\n        return promise_index;\n    }\n}\nexport class PromiseJoint {\n    constructor(promise_a, promise_b, promise_index) {\n        this.promise_a = promise_a;\n        this.promise_b = promise_b;\n        this.promise_index = promise_index;\n    }\n    constructRecursively() {\n        if (this.promise_index !== null) {\n            return this.promise_index;\n        }\n        let res = near.promiseAnd(BigInt(this.promise_a.constructRecursively()), BigInt(this.promise_b.constructRecursively()));\n        this.promise_index = res;\n        return res;\n    }\n}\nexport class NearPromise {\n    constructor(subtype, should_return) {\n        this.subtype = subtype;\n        this.should_return = should_return;\n    }\n    static new(account_id) {\n        let subtype = new PromiseSingle(account_id, [], null, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    add_action(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        else {\n            this.subtype.actions.push(action);\n        }\n        return this;\n    }\n    createAccount() {\n        return this.add_action(new CreateAccount());\n    }\n    deployContract(code) {\n        return this.add_action(new DeployContract(code));\n    }\n    functionCall(function_name, args, amount, gas) {\n        return this.add_action(new FunctionCall(function_name, args, amount, gas));\n    }\n    functionCallWeight(function_name, args, amount, gas, weight) {\n        return this.add_action(new FunctionCallWeight(function_name, args, amount, gas, weight));\n    }\n    transfer(amount) {\n        return this.add_action(new Transfer(amount));\n    }\n    stake(amount, public_key) {\n        return this.add_action(new Stake(amount, public_key));\n    }\n    addFullAccessKey(public_key) {\n        return this.addFullAccessKeyWithNonce(public_key, 0n);\n    }\n    addFullAccessKeyWithNonce(public_key, nonce) {\n        return this.add_action(new AddFullAccessKey(public_key, nonce));\n    }\n    addAccessKey(public_key, allowance, receiver_id, method_names) {\n        return this.addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, 0n);\n    }\n    addAccessKeyWithNonce(public_key, allowance, receiver_id, method_names, nonce) {\n        return this.add_action(new AddAccessKey(public_key, allowance, receiver_id, method_names, nonce));\n    }\n    deleteKey(public_key) {\n        return this.add_action(new DeleteKey(public_key));\n    }\n    deleteAccount(beneficiary_id) {\n        return this.add_action(new DeleteAccount(beneficiary_id));\n    }\n    and(other) {\n        let subtype = new PromiseJoint(this, other, null);\n        let ret = new NearPromise(subtype, false);\n        return ret;\n    }\n    then(other) {\n        if (other.subtype instanceof PromiseSingle) {\n            if (other.subtype.after !== null) {\n                throw new Error(\"Cannot callback promise which is already scheduled after another\");\n            }\n            other.subtype.after = this;\n        }\n        else {\n            throw new Error(\"Cannot callback joint promise.\");\n        }\n        return other;\n    }\n    asReturn() {\n        this.should_return = true;\n        return this;\n    }\n    constructRecursively() {\n        let res = this.subtype.constructRecursively();\n        if (this.should_return) {\n            near.promiseReturn(res);\n        }\n        return res;\n    }\n    // Called by NearBindgen, when return object is a NearPromise instance.\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","import { assert } from \"near-sdk-js\";\n\nexport const enum StrategyType {\n  Free,\n  Constant,\n  Linear,\n  Exponential,\n}\n\nexport class FeeStrategy {\n  static from(feeStrategy: FeeStrategy) {\n    return new FeeStrategy(feeStrategy.strategy);\n  }\n\n  constructor(private strategy: StrategyType = StrategyType.Exponential) {\n    assertValidFeeStrategy(strategy);\n  }\n\n  get strategyType() {\n    return this.strategy;\n  }\n\n  explain(): string {\n    return \"one of [ Free | Constant | Linear | Exponential ]\";\n  }\n\n  // TODO: handle possible overflow for each strategy\n  calculate(scalar: number, base: bigint): bigint {\n    let fee = BigInt(0);\n\n    switch (this.strategy) {\n      case StrategyType.Free:\n        // fee is already zero\n        break;\n      case StrategyType.Constant:\n        fee = this.calculateConstant(base);\n        break;\n      case StrategyType.Linear:\n        fee = this.calculateLinear(scalar, base);\n        break;\n      case StrategyType.Exponential:\n        fee = this.calculateExponential(scalar, base);\n        break;\n      default:\n        throw new Error(\"Unexpected StrategyType encountered\");\n    }\n\n    return fee;\n  }\n\n  //---------------------------------------------------------------------------\n  // FeeStrategy helper methods\n  //---------------------------------------------------------------------------\n\n  calculateConstant(base: bigint): bigint {\n    return base;\n  }\n\n  calculateLinear(scalar: number, base: bigint): bigint {\n    return BigInt(scalar) * base;\n  }\n\n  calculateExponential(scalar: number, base: bigint): bigint {\n    return base * BigInt(scalar ** 2);\n  }\n}\n\nexport function isValidFeeStrategy(s: number): boolean {\n  switch (s) {\n    case StrategyType.Free:\n    case StrategyType.Constant:\n    case StrategyType.Linear:\n    case StrategyType.Exponential:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function assertValidFeeStrategy(strategy: StrategyType): void {\n  assert(\n    isValidFeeStrategy(strategy),\n    \"Invalid FeeStrategy: \" + strategy.toString()\n  );\n}\n","import { near } from \"near-sdk-js\";\n\nexport const ONE_NEAR: bigint = BigInt(10e24);\nexport const TGAS: bigint = BigInt(10e14);\nexport const XCC_GAS: bigint = BigInt(5) * TGAS;\n\nexport function asNEAR(value: bigint): string {\n  return `${BigInt(Number(value)) / ONE_NEAR}`;\n}\n\nexport function random(bound: number): number {\n  const sum = Array.from(near.randomSeed()).reduce(\n    (sum, current) => sum + current.charCodeAt(0),\n    0\n  );\n\n  return sum % bound;\n}\n","import { assert, near } from \"near-sdk-js\";\nimport { random } from \"./utils\";\n\nexport class Lottery {\n  static from(lottery: Lottery): Lottery {\n    return new Lottery(lottery.chance);\n  }\n\n  constructor(private chance: number = 0.2) {}\n\n  explain(): string {\n    return `Players have a ${(this.chance * 100).toFixed(\n      1\n    )}% chance of winning.`;\n  }\n\n  play(): boolean {\n    const height = Number(near.blockHeight());\n    const roll = random(height);\n\n    near.log(\"roll: \" + roll.toString());\n\n    return roll <= height * this.chance;\n  }\n\n  configure(chance: number): void {\n    assert(\n      chance >= 0.000000001 && chance <= 1,\n      \"Chance must be within range (0..1]\"\n    );\n\n    this.chance = chance;\n    near.log(this.explain());\n  }\n}\n","import {\n  NearBindgen,\n  near,\n  call,\n  view,\n  UnorderedSet,\n  bytes,\n  assert,\n  initialize,\n  NearPromise,\n} from \"near-sdk-js\";\nimport { FeeStrategy, StrategyType } from \"./fee-strategies\";\nimport { Lottery } from \"./lottery\";\nimport { asNEAR, ONE_NEAR, XCC_GAS } from \"./utils\";\n\nBigInt.prototype[\"toJSON\"] = function () {\n  return this.toString();\n};\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen({ requireInit: true })\nexport class Contract {\n  private owner: string = \"\";\n  private winner: string = \"\";\n  private lastPlayed: string = \"\";\n  private active: boolean = true;\n  private pot: bigint = ONE_NEAR;\n  private lottery: Lottery = new Lottery();\n  private feeStrategy: FeeStrategy = new FeeStrategy();\n  private players: UnorderedSet = new UnorderedSet(\"p\");\n\n  @initialize({})\n  init({ owner }: { owner: string }) {\n    this.owner = owner;\n  }\n\n  @view({})\n  get_owner(): string {\n    return this.owner;\n  }\n\n  @view({})\n  get_winner(): string {\n    return this.winner;\n  }\n\n  @view({})\n  get_pot(): string {\n    return `${asNEAR(this.pot)} NEAR`;\n  }\n\n  @view({})\n  get_fee(): string {\n    return asNEAR(this.fee()) + \" NEAR\";\n  }\n\n  @view({})\n  get_fee_strategy(): StrategyType {\n    return FeeStrategy.from(this.feeStrategy).strategyType;\n  }\n\n  @view({})\n  get_has_played({ player }: { player: string }): boolean {\n    return this.players.contains(player);\n  }\n\n  @view({})\n  get_last_played(): string {\n    return this.lastPlayed;\n  }\n\n  @view({})\n  get_active(): boolean {\n    return this.active;\n  }\n\n  @view({})\n  explain_fees(): string {\n    return FeeStrategy.from(this.feeStrategy).explain();\n  }\n\n  @view({})\n  explain_lottery(): string {\n    return Lottery.from(this.lottery).explain();\n  }\n\n  // --------------------------------------------------------------------------\n  // Public CHANGE methods\n  // --------------------------------------------------------------------------\n\n  /**\n   * \"Pay to play\"\n   *\n   * First time is free to play and you may win!\n   *\n   * If you've already played once then any other play costs you a fee.\n   * This fee is calculated as 1 NEAR X the square of the total number of unique players\n   */\n  @call({})\n  play(): void {\n    assert(\n      this.active,\n      `${this.winner} won ${this.pot}. Please reset the game.`\n    );\n    const signer = near.signerAccountId();\n    const deposit = near.attachedDeposit();\n    const played = this.players.contains(signer);\n\n    // if you've played before then you have to pay extra\n    if (played) {\n      const fee = this.fee();\n      assert(deposit >= fee, this.generateFeeMessage(fee));\n      this.pot = BigInt(this.pot) + deposit;\n    } else {\n      // if it's your first time then you may win for the price of gas\n      this.players.set(signer);\n    }\n\n    this.lastPlayed = signer;\n\n    if (this.playLottery()) {\n      this.winner = signer;\n      near.log(`${this.winner} won ${this.get_pot()}!`);\n\n      if (this.winner.length > 0) {\n        this.payout();\n      }\n    } else {\n      near.log(\n        `${\n          this.lastPlayed\n        } did not win.  The pot is currently ${this.get_pot()}`\n      );\n    }\n  }\n\n  @call({ privateFunction: true })\n  configure_lottery({ chance }: { chance: number }): boolean {\n    const lottery = Lottery.from(this.lottery);\n    lottery.configure(chance);\n\n    this.lottery = lottery;\n    return true;\n  }\n\n  @call({ privateFunction: true })\n  configure_fee({ strategy }: { strategy: StrategyType }): boolean {\n    this.feeStrategy = new FeeStrategy(strategy);\n    return true;\n  }\n\n  @call({ privateFunction: true })\n  reset(): void {\n    this.players.clear();\n    this.winner = \"\";\n    this.lastPlayed = \"\";\n    this.pot = ONE_NEAR;\n    this.active = true;\n  }\n\n  // this method is only here for the promise callback,\n  // it should never be called directly\n  @call({ privateFunction: true })\n  on_payout_complete(): void {\n    this.active = false;\n    near.log(\"game over.\");\n  }\n\n  // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  private fee(): bigint {\n    return FeeStrategy.from(this.feeStrategy).calculate(\n      this.players.length,\n      ONE_NEAR\n    );\n  }\n\n  private generateFeeMessage(fee: bigint): string {\n    return `There are ${\n      this.players.length\n    } players. Playing more than once now costs ${asNEAR(fee)} NEAR`;\n  }\n\n  private playLottery(): boolean {\n    return Lottery.from(this.lottery).play();\n  }\n\n  private payout(): NearPromise {\n    return NearPromise.new(this.winner)\n      .transfer(this.pot) // transfer payout to winner\n      .then(\n        // receive confirmation of payout before setting game to inactive\n        NearPromise.new(near.currentAccountId()).functionCall(\n          \"on_payout_complete\",\n          bytes(JSON.stringify({})),\n          0n,\n          XCC_GAS\n        )\n      );\n  }\n}\n"],"names":["PromiseResult","PromiseError","u8ArrayToBytes","array","ret","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","strOrU8Array","checkStringIsBytes","Error","str","assert","b","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","c","encode","Array","from","reverse","reduce","acc","undefined","decode","alphabet","digits","isArray","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","log","params","env","x","JSON","stringify","signerAccountId","signer_account_id","read_register","predecessorAccountId","predecessor_account_id","blockIndex","block_index","blockHeight","attachedDeposit","attached_deposit","randomSeed","random_seed","storageRead","key","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","promiseAnd","promiseIndex","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","initialize","target","descriptor","call","privateFunction","payableFunction","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","parse","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","Uint32Array","buffer","Vector","isEmpty","get","storageKey","swapRemove","pop","last","element","lastIndex","lastKey","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","serialize","vector","current","next","serializeIndex","deserializeIndex","rawIndex","UnorderedSet","elementIndexPrefix","elementsPrefix","_l","contains","indexLookup","set","nextIndex","nextIndexRaw","remove","indexRaw","lastElement","lastLookupElement","PromiseAction","CreateAccount","add","promise_index","DeployContract","FunctionCall","function_name","FunctionCallWeight","Transfer","Stake","public_key","AddFullAccessKey","AddAccessKey","receiver_id","function_names","DeleteKey","DeleteAccount","beneficiary_id","PromiseSingle","account_id","actions","after","constructRecursively","action","PromiseJoint","promise_a","promise_b","NearPromise","subtype","should_return","new","add_action","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","method_names","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","StrategyType","FeeStrategy","feeStrategy","strategy","Exponential","assertValidFeeStrategy","strategyType","explain","calculate","scalar","base","fee","Free","Constant","calculateConstant","Linear","calculateLinear","calculateExponential","isValidFeeStrategy","toString","ONE_NEAR","TGAS","XCC_GAS","asNEAR","random","bound","Lottery","lottery","chance","toFixed","play","height","roll","configure","prototype","Contract","owner","winner","lastPlayed","active","pot","players","init","get_owner","get_winner","get_pot","get_fee","get_fee_strategy","get_has_played","player","get_last_played","get_active","explain_fees","explain_lottery","signer","deposit","played","generateFeeMessage","playLottery","payout","configure_lottery","configure_fee","reset","on_payout_complete"],"mappings":"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"}