{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/fee-strategies.ts","../src/utils.ts","../src/lottery.ts","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    len() {\n        return this.elements.len();\n    }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.len() - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import { assert, near } from \"near-sdk-js\";\n\nexport const enum StrategyType {\n  Free,\n  Constant,\n  Linear,\n  Exponential,\n}\n\nexport class FeeStrategy {\n  static from(feeStrategy: FeeStrategy) {\n    return new FeeStrategy(feeStrategy.strategy);\n  }\n\n  constructor(private strategy: StrategyType = StrategyType.Exponential) {\n    assertValidFeeStrategy(strategy);\n  }\n\n  get strategyType() {\n    return this.strategy;\n  }\n\n  explain(): string {\n    return \"one of [ Free | Constant | Linear | Exponential ]\";\n  }\n\n  // TODO: handle possible overflow for each strategy\n  calculate(scalar: number, base: bigint): bigint {\n    let fee = BigInt(0);\n\n    switch (this.strategy) {\n      case StrategyType.Free:\n        // fee is already zero\n        break;\n      case StrategyType.Constant:\n        fee = this.calculateConstant(base);\n        break;\n      case StrategyType.Linear:\n        fee = this.calculateLinear(scalar, base);\n        break;\n      case StrategyType.Exponential:\n        fee = this.calculateExponential(scalar, base);\n        break;\n      default:\n        near.log(\"Unexpected StrategyType encountered\");\n        near.panic();\n    }\n\n    return fee;\n  }\n\n  //---------------------------------------------------------------------------\n  // FeeStrategy helper methods\n  //---------------------------------------------------------------------------\n\n  calculateConstant(base: bigint): bigint {\n    return base;\n  }\n\n  calculateLinear(scalar: number, base: bigint): bigint {\n    return BigInt(scalar) * base;\n  }\n\n  calculateExponential(scalar: number, base: bigint): bigint {\n    return base * BigInt(scalar ** 2);\n  }\n}\n\nexport function isValidFeeStrategy(s: number): boolean {\n  switch (s) {\n    case StrategyType.Free:\n    case StrategyType.Constant:\n    case StrategyType.Linear:\n    case StrategyType.Exponential:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function assertValidFeeStrategy(strategy: StrategyType): void {\n  assert(\n    isValidFeeStrategy(strategy),\n    \"Invalid FeeStrategy: \" + strategy.toString()\n  );\n}\n","import { near } from \"near-sdk-js\";\n\nexport const ONE_NEAR: bigint = BigInt(10e24);\nexport const TGAS: bigint = BigInt(10e14);\nexport const XCC_GAS: bigint = BigInt(5) * TGAS;\n\nexport function asNEAR(value: bigint): string {\n  return `${BigInt(Number(value)) / ONE_NEAR}`;\n}\n\nexport function random(bound: number): number {\n  const sum = Array.from(near.randomSeed()).reduce(\n    (sum, current) => sum + current.charCodeAt(0),\n    0\n  );\n\n  return sum % bound;\n}\n","import { assert, near } from \"near-sdk-js\";\nimport { random } from \"./utils\";\n\nexport class Lottery {\n  static from(lottery: Lottery): Lottery {\n    return new Lottery(lottery.chance);\n  }\n\n  constructor(private chance: number = 0.2) {}\n\n  explain(): string {\n    return `Players have a ${(this.chance * 100).toFixed(\n      1\n    )}% chance of winning.`;\n  }\n\n  play(): boolean {\n    const height = Number(near.blockHeight());\n    const roll = random(height);\n\n    near.log(\"roll: \" + roll.toString());\n\n    return roll <= height * this.chance;\n  }\n\n  configure(chance: number): void {\n    assert(\n      chance >= 0.000000001 && chance <= 1,\n      \"Chance must be within range (0..1]\"\n    );\n\n    this.chance = chance;\n    near.log(this.explain());\n  }\n}\n","import {\n  NearBindgen,\n  NearContract,\n  near,\n  call,\n  view,\n  UnorderedSet,\n  bytes,\n  assert,\n} from \"near-sdk-js\";\nimport { FeeStrategy, StrategyType } from \"./fee-strategies\";\nimport { Lottery } from \"./lottery\";\nimport { asNEAR, ONE_NEAR, XCC_GAS } from \"./utils\";\n\nBigInt.prototype[\"toJSON\"] = function () {\n  return this.toString();\n};\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen\nexport class Contract extends NearContract {\n  private owner: string;\n  private winner: string;\n  private lastPlayed: string;\n  private active: boolean = true;\n  private pot: bigint = ONE_NEAR;\n  private lottery: Lottery = new Lottery();\n  private feeStrategy: FeeStrategy = new FeeStrategy();\n  private players: UnorderedSet = new UnorderedSet(\"players\");\n\n  constructor({ owner }: { owner: string }) {\n    super();\n    this.owner = owner;\n  }\n\n  default(): Contract {\n    return new Contract({ owner: \"\" });\n  }\n\n  @view\n  get_owner(): string {\n    return this.owner;\n  }\n\n  @view\n  get_winner(): string {\n    return this.winner;\n  }\n\n  @view\n  get_pot(): string {\n    return `${asNEAR(this.pot)} NEAR`;\n  }\n\n  @view\n  get_fee(): string {\n    return asNEAR(this.fee()) + \" NEAR\";\n  }\n\n  @view\n  get_fee_strategy(): StrategyType {\n    return FeeStrategy.from(this.feeStrategy).strategyType;\n  }\n\n  @view\n  get_has_played({ player }: { player: string }): boolean {\n    return this.players.contains(player);\n  }\n\n  @view\n  get_last_played(): string {\n    return this.lastPlayed;\n  }\n\n  @view\n  get_active(): boolean {\n    return this.active;\n  }\n\n  @view\n  explain_fees(): string {\n    return FeeStrategy.from(this.feeStrategy).explain();\n  }\n\n  @view\n  explain_lottery(): string {\n    return Lottery.from(this.lottery).explain();\n  }\n\n  // --------------------------------------------------------------------------\n  // Public CHANGE methods\n  // --------------------------------------------------------------------------\n\n  /**\n   * \"Pay to play\"\n   *\n   * First time is free to play and you may win!\n   *\n   * If you've already played once then any other play costs you a fee.\n   * This fee is calculated as 1 NEAR X the square of the total number of unique players\n   */\n  @call\n  play(): void {\n    assert(\n      this.active,\n      `${this.winner} won ${this.pot}. Please reset the game.`\n    );\n    const signer = near.signerAccountId();\n    const deposit = BigInt(Number(near.attachedDeposit()));\n\n    // if you've played before then you have to pay extra\n    if (this.players.contains(signer)) {\n      const fee = this.fee();\n      assert(deposit >= fee, this.generateFeeMessage(fee));\n      this.increasePot();\n\n      // if it's your first time then you may win for the price of gas\n    } else {\n      this.players.set(signer);\n    }\n\n    this.lastPlayed = signer;\n\n    if (Lottery.from(this.lottery).play()) {\n      this.winner = signer;\n      near.log(`${this.winner} won ${this.get_pot()}!`);\n\n      if (this.winner.length > 0) {\n        const promise = near.promiseBatchCreate(this.winner);\n\n        // transfer payout to winner\n        near.promiseBatchActionTransfer(promise, this.pot);\n\n        // receive confirmation of payout before setting game to inactive\n        const then = near.promiseThen(\n          promise,\n          near.currentAccountId(),\n          \"on_payout_complete\",\n          bytes(JSON.stringify({})),\n          0,\n          XCC_GAS\n        );\n\n        near.promiseReturn(then);\n      }\n    } else {\n      near.log(\n        `${\n          this.lastPlayed\n        } did not win.  The pot is currently ${this.get_pot()}`\n      );\n    }\n  }\n\n  @call\n  configure_lottery({ chance }: { chance: number }): boolean {\n    this.assertSelf();\n\n    const lottery = Lottery.from(this.lottery);\n    lottery.configure(chance);\n\n    this.lottery = lottery;\n    return true;\n  }\n\n  @call\n  configure_fee({ strategy }: { strategy: StrategyType }): boolean {\n    this.assertSelf();\n    this.feeStrategy = new FeeStrategy(strategy);\n    return true;\n  }\n\n  @call\n  reset(): void {\n    this.assertSelf();\n    this.players.clear();\n    this.winner = \"\";\n    this.lastPlayed = \"\";\n    this.pot = ONE_NEAR;\n    this.active = true;\n  }\n\n  // this method is only here for the promise callback,\n  // it should never be called directly\n  @call\n  on_payout_complete(): void {\n    this.assertSelf();\n    this.active = false;\n    near.log(\"game over.\");\n  }\n\n  @view\n  randomStr(): string {\n    return near.randomSeed();\n  }\n\n  // --------------------------------------------------------------------------\n  // Private methods\n  // --------------------------------------------------------------------------\n\n  private fee(): bigint {\n    return FeeStrategy.from(this.feeStrategy).calculate(\n      this.players.len(),\n      ONE_NEAR\n    );\n  }\n\n  private increasePot(): void {\n    this.pot = BigInt(this.pot) + BigInt(Number(near.attachedDeposit()));\n  }\n\n  private generateFeeMessage(fee: bigint): string {\n    return `There are ${this.players.len()} players. Playing more than once now costs ${asNEAR(\n      fee\n    )} NEAR`;\n  }\n\n  private assertSelf(): void {\n    assert(\n      near.predecessorAccountId() === near.currentAccountId(),\n      \"Only this contract may call this method\"\n    );\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","signerAccountId","signer_account_id","read_register","predecessorAccountId","predecessor_account_id","blockIndex","block_index","blockHeight","attachedDeposit","attached_deposit","randomSeed","random_seed","panic","msg","storageRead","storage_read","storageHasKey","storage_has_key","storageGetEvicted","currentAccountId","current_account_id","input","promiseThen","promiseIndex","accountId","methodName","amount","gas","promise_then","promiseBatchCreate","promise_batch_create","promiseBatchActionTransfer","promise_batch_action_transfer","PromiseResult","promiseReturn","promiseIdx","promise_return","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","parse","c","default","assign","item","constructor","Error","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","strOrU8Array","checkStringIsBytes","str","assert","b","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","buffer","Vector","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedSet","elementIndexPrefix","elementsPrefix","serializeIndex","deserializeIndex","rawIndex","contains","indexLookup","set","nextIndex","nextIndexRaw","remove","indexRaw","lastElement","lastLookupElement","StrategyType","FeeStrategy","from","feeStrategy","strategy","Exponential","assertValidFeeStrategy","strategyType","explain","calculate","scalar","base","fee","BigInt","Free","Constant","calculateConstant","Linear","calculateLinear","calculateExponential","isValidFeeStrategy","s","toString","ONE_NEAR","TGAS","XCC_GAS","asNEAR","Number","random","bound","sum","Array","reduce","Lottery","lottery","chance","toFixed","play","height","roll","configure","Contract","active","pot","players","owner","get_owner","get_winner","winner","get_pot","get_fee","get_fee_strategy","get_has_played","player","get_last_played","lastPlayed","get_active","explain_fees","explain_lottery","signer","deposit","generateFeeMessage","increasePot","promise","then","configure_lottery","assertSelf","configure_fee","reset","on_payout_complete","randomStr"],"mappings":"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"}